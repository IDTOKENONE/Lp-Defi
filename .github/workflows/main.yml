name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy_pinata:
    runs-on: ubuntu-latest
    name: Deploy to Pinata
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - name: Install node packages
        run: npm ci

      - name: Build the app
        run: npm run build

      - name: Pin to IPFS on Pinata
        id: deploy
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.4
        with:
          pin-name: 'terra-web-dapp'
          path: './build'
          verbose: true
          remove-old: false
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_SECRET_API_KEY }}

      - name: Get the output hash
        run: echo "The hash was ${{ steps.deploy.outputs.hash }}"

    # Use the output from the `deploy` step
    outputs:
      ipfs_hash: ${{ steps.deploy.outputs.hash }}

  update_cloudflare:
    needs: [deploy_pinata]
    runs-on: ubuntu-latest
    name: Update cloudflare
    strategy:
      matrix:
        zone_id: [{{ secrets.APP_ZONE_ID }}, {{ secrets.CH_ZONE_ID }}, {{ secrets.IS_ZONE_ID }}]
    steps:
      - name: Update CloudFlare DNS with new IPFS hash
        env:
          CLOUDFLARE_ZONE_ID: ${{ matrix.zone_id }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: ''
          RECORD_NAME: '_dnslink'
        uses: textileio/cloudflare-update-dnslink@v2
        with:
          cid: ${{ needs.deploy_pinata.outputs.ipfs_hash }}

  update_terraform_vars:
    needs: [deploy_pinata]
    runs-on: ubuntu-latest
    name: Update terraform vars
    steps:
      - name: Update Terraform cloud vars
        uses: patrontech/devops-tf-cloud-update@v1.0
        with:
          workSpaceName: dns-mirror
          organizationName: ${{ secrets.ORGANIZATION }}
          terraformToken: ${{ secrets.TERRAFORM_TOKEN }}
          terraformHost: 'app.terraform.io'
          variableName: 'ipfs_hash'
          variableValue: ${{ needs.deploy_pinata.outputs.ipfs_hash }}