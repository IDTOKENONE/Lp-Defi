name: deploy
on:
<<<<<<< HEAD
  # push:
  #   branches:
  #     - main
=======
  push:
    branches:
      - main
>>>>>>> main
  workflow_dispatch:

jobs:
  deploy_pinata:
    runs-on: ubuntu-latest
    name: Deploy to Pinata
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org

      - name: Install node packages
        run: npm ci

      - name: Build the app
        run: npm run build

      - name: Pin to IPFS on Pinata
        id: deploy
        uses: anantaramdas/ipfs-pinata-deploy-action@v1.6.4
        with:
          pin-name: 'terra-web-dapp'
          path: './build'
          verbose: true
          remove-old: false
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_SECRET_API_KEY }}

      # Use the output from the `deploy` step
      - name: Get the output hash
        run: echo "The hash was ${{ steps.deploy.outputs.hash }}"

  update_cloudflare:
    runs-on: ubuntu-latest
    name: Update cloudflare
    strategy:
      matrix:
        zone_id: ["4f21ee71322ab9d9d946f3e381415175", "d5f6cfc820e8956e3e493aa354464e5f", "cff51f05ed7d948f5ea310b27dd459a7"]
    steps:
      - name: Update CloudFlare DNS with new IPFS hash
        env:
          CLOUDFLARE_ZONE_ID: ${{ matrix.zone_id }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          RECORD_DOMAIN: ''
          RECORD_NAME: '_dnslink'
        uses: textileio/cloudflare-update-dnslink@v2
        with:
          cid: ${{ steps.deploy.outputs.hash }}